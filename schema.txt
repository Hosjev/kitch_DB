POSTGRES
Tables (3) booze/non-booze/ingredients (change to other)
  --these contain names to populate main page

Table be_drinks
  --contains all drink data
  uuid   | d_id    | name         | type         | container    | instructions | image        | data | created_at
 -----------------------------------------------------------------------------------------------------------------
  uuid   | integer | varchar(255) | varchar(100) | varchar(100) | text         | varchar(255) | json | timestamp
  
  uuid uuid NOT NULL PRIMARY KEY,
  d_id integer NOT NULL,
  name varchar(100) NOT NULL,
  type varchar(100) NOT NULL,
  container varchar(100),
  instructions text NOT NULL,
  image varchar(255) NOT NULL,
  data json NOT NULL,
  created_at date DEFAULT CURRENT_TIMESTAMP  

Queries to perform
# select all metadata from search pattern
select * from be_drinks
  where (data)::jsonb ? ALL(ARRAY['', ''...]);
# select data to display for each
select name, type, instructions, image, data
  from be_drinks
  where (data)::jsonb ? ALL(ARRAY['', ''...]);

# image insertion into table
insert into be_drinks (d_id, name, combos, image) values (17263, 'Highball', '{"coke": "1 oz"}', bytea_import('/home/hosjev/hosted-sites/kitch_database/Source/images/zvsre31572902738.jpg'));

# regular insertion referencing static image name
insert into be_drinks
  (uuid, d_id, name, type, container, instructions, image, data, created_at)
  values (
    uuid_generate_v4(),
    17835,
    'Highball',
    'Classic',
    'tumbler',
    'Mix everything with ice',
    'zvsre31572902738.jpg',
    '{"coke": "1 oz"}');

SQLITE
# because I'm an idiot and can't figure out Sqlite json objects, the table as such:
Table be_drinks
  --contains all drink data
  id     | d_id    | name         | type         | container    | instructions | image        | ingredients | measurements | created_at
 -----------------------------------------------------------------------------------------------------------------
  uuid   | integer | varchar(255) | varchar(100) | varchar(100) | text         | varchar(255) | json        | json         | timestamp

# Create
CREATE TABLE be_drinks(
  d_id INTEGER NOT NULL,
  name VARCHAR(100) NOT NULL,
  type VARCHAR(100) NOT NULL,
  container VARCHAR(100),
  instructions TEXT NOT NULL,
  image VARCHAR(100) NOT NULL,
  ingredients JSON NOT NULL,
  measurements JSON,
  created_at date)

# Insert
INSERT INTO be_drinks VALUES(
  18977,
  'Martini',
  'Classic',
  'Fancy',
  'Mix all ingreds and pour',
  'zvsre31572902738.jpg',
  '["", "", ""]',
  '["", "", ""]',
  datetime('now'))

# query to run
SELECT be_drinks.* FROM be_drinks d, JSON_EACH(ingredients) ing
  WHERE ing.value IN (item, item...)
  GROUP BY d.id
  HAVING COUNT(DISTINCT ing.value) >= (len/number of terms);

  

# Notes
1) sanitize data into 3 page tables the SAME as be_drinks
2) establish steps in process to run them the SAME each month to update database
3) in the scripts, identify B/NB/Other into groups, then compare updates to db and
   new ingredients with established groups
